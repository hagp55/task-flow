[tool.poetry]
name = "task-mania"
version = "0.1.0"
description = ""
authors = ["Aleksandr Smelik <suntrope55@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.8"
uvicorn = "^0.34.0"
pydantic-settings = "^2.7.1"
pyyaml = "^6.0.2"
sqlalchemy = "^2.0.38"
alembic = "^1.14.1"
redis = "^5.2.1"
python-jose = {extras = ["crypography"], version = "^3.3.0"}
asyncpg = "^0.30.0"
greenlet = "^3.1.1"
httpx = "^0.28.1"
gunicorn = "^23.0.0"
celery = "^5.4.0"
flower = "^2.0.1"
sentry-sdk = {extras = ["fastapi"], version = "^2.22.0"}
email-validator = "^2.2.0"
passlib = "^1.7.4"
cryptography = "^44.0.1"
bcrypt = "^4.2.1"
sqladmin = "^0.20.1"
itsdangerous = "^2.2.0"
orjson = "^3.10.15"
uvloop = "^0.21.0"
httptools = "^0.6.4"
aio-pika = "^9.5.5"


[tool.poetry.group.linter.dependencies]
ruff = "^0.9.6"
mypy = "^1.15.0"
pre-commit = "^4.1.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-alembic = "^0.11.1"
pytest-coverage = "^0.0"
pytest-factoryboy = "^2.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py313"
line-length = 120
extend-exclude = [
    "__pycache__",
    ".git/",
    "env/",
    "venv/",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"



[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "R",  # refactor
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

ignore = [
    "ARG001",  # Unused function argument
    "B008",    # do not perform function calls in argument defaults
    "B904",    # Allow raising exceptions without from e, for HTTPException
    "F841",    # Local variable `response` is assigned to but never used
    "RET504",  # Unnecessary assignment to `users` before `return` statement
    "UP015",   # [*] Unnecessary open mode parameters
    "UP031",   # Use format specifiers instead of percent formatRuff
]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.pytest.ini_options]
pythonpath = [
  ".", "src",
]
asyncio_mode="auto"
asyncio_default_fixture_loop_scope = "session"
markers = [
    "unittest: marks tests as unittest tests (deselect with '-m \"not unittest\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
omit = [
    "__init__.py",
    "src/bootstrap.py",
    "src/main.py",
    "*/tests/*",
    "*/venv/*",
    "*/alembic/*",

]
