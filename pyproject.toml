[tool.poetry]
name = "pomodoro-poetry"
version = "0.1.0"
description = ""
authors = ["Aleksandr Smelik <suntrope55@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.8"
uvicorn = "^0.34.0"
pydantic-settings = "^2.7.1"


[tool.poetry.group.linter.dependencies]
ruff = "^0.9.6"
mypy = "^1.15.0"
pre-commit = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py313"
line-length = 110
extend-exclude = [
    "alembic",
    "__init__.py",
    "__pycache__",
    ".git/",
    "env/",
    "venv/",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "R",  # refactor
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

ignore = [
    "ARG001", # Unused function argument
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "F841", # Local variable `response` is assigned to but never used
    "RET504", # Unnecessary assignment to `users` before `return` statement
    "UP015", # [*] Unnecessary open mode parameters
]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
